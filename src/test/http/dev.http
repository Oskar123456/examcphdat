@url=http://localhost:9999/api

###
# @name [Security] LOGIN FAIL

POST {{url}}/auth/login
Content-Type: application/json

{
    "username": "admin",
    "password": "lol"
}

> {%
    client.test("admin authorization supposed to fail", function() {
        client.assert(response.status === 401, "response status is not 401");
    });
%}

###
# @name [Security] LOGIN

POST {{url}}/auth/login
Content-Type: application/json

{
    "username": "admin",
    "password": "admin"
}

> {%
    client.global.set("JWT", response.body.token);
%}

###
# @name [Security] TEST USER PRIVS FAIL

GET {{url}}/protected/user_demo
Authorization: Bearer "LOL"

> {%
    client.test("admin authorization", function() {
        client.assert(response.status === 401, "response status is not 401");
    });
%}

###
# @name [Security] TEST ADMIN PRIVS FAIL

GET {{url}}/protected/admin_demo
Authorization: Bearer "LOL"

> {%
    client.test("admin authorization", function() {
        client.assert(response.status === 401, "response status is not 401");
    });
%}

###
# @name [Security] TEST ADMIN PRIVS

GET {{url}}/protected/admin_demo
Authorization: Bearer {{JWT}}

> {%
    client.test("admin authorization", function() {
        client.assert(response.status === 200, "response status is not 200");
    });
%}


###
# @name [API] GET ALL

GET {{url}}/trips

> {%
    client.test("get all", function() {
        client.assert(response.status === 200, "response status is not 200 " + response.status);
    });
%}

###
# @name [API + SECURITY] POST TRIP

POST {{url}}/trips
Content-Type: application/json

< ./../resources/json/trip1.json

> {%
    client.test("post trip w/o admin jwt", function() {
        client.assert(response.status === 401, "response status is not 401 " + response.status);
    });
%}

###
# @name [API] POST TRIP

POST {{url}}/trips
Content-Type: application/json
Authorization: Bearer {{JWT}}

< ./../resources/json/trip1.json

> {%
    client.global.set("trip_id", response.body.id);
    client.test("post trip", function() {
        client.assert(response.status === 201, "response status is not 201 " + response.status);
    });
%}

###
# @name [API] GET POSTED

GET {{url}}/trips/{{trip_id}}

> {%
    client.test("get posted", function() {
        client.assert(response.status === 200, "response status is not correct " + response.status);
    });
%}

###
# @name [API] GET FAIL 400

GET {{url}}/trips/fail

> {%
    client.test("get invalid input", function() {
        client.assert(response.status === 400, "response status is not correct " + response.status);
    });
%}

###
# @name [API] GET FAIL 404

GET {{url}}/trips/240345

> {%
    client.test("get not found", function() {
        client.assert(response.status === 404, "response status is not correct " + response.status);
    });
%}

###
# @name [API] PUT TRIP GUIDE

PUT {{url}}/trips/{{trip_id}}
Content-Type: application/json

< ./../resources/json/guide1.json

> {%
    client.test("post trip w/o admin jwt", function() {
        client.assert(response.status === 200, "response status is not 200 " + response.status);
    });
%}

###
# @name [API] GET BY CAT

GET {{url}}/trips/category/BADEFERIE

> {%
    client.test("get by cat", function() {
        client.assert(response.status === 200, "response status is not correct " + response.status);
    });
%}

###
# @name [API] GET BY SUMS

GET {{url}}/trips/guidespricesum

> {%
    client.test("get by sums", function() {
        client.assert(response.status === 200, "response status is not correct " + response.status);
    });
%}

